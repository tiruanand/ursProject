//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace urShopper.Data.Loader.ProductService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Product", Namespace="http://schemas.datacontract.org/2004/07/eFIN.MVP.Services.Store")]
    [System.SerializableAttribute()]
    public partial class Product : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EANField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GTINField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastUpdatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManufacturerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SKUField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UPCField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EAN {
            get {
                return this.EANField;
            }
            set {
                if ((object.ReferenceEquals(this.EANField, value) != true)) {
                    this.EANField = value;
                    this.RaisePropertyChanged("EAN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GTIN {
            get {
                return this.GTINField;
            }
            set {
                if ((object.ReferenceEquals(this.GTINField, value) != true)) {
                    this.GTINField = value;
                    this.RaisePropertyChanged("GTIN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastUpdatedOn {
            get {
                return this.LastUpdatedOnField;
            }
            set {
                if ((this.LastUpdatedOnField.Equals(value) != true)) {
                    this.LastUpdatedOnField = value;
                    this.RaisePropertyChanged("LastUpdatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Manufacturer {
            get {
                return this.ManufacturerField;
            }
            set {
                if ((object.ReferenceEquals(this.ManufacturerField, value) != true)) {
                    this.ManufacturerField = value;
                    this.RaisePropertyChanged("Manufacturer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SKU {
            get {
                return this.SKUField;
            }
            set {
                if ((object.ReferenceEquals(this.SKUField, value) != true)) {
                    this.SKUField = value;
                    this.RaisePropertyChanged("SKU");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UOM {
            get {
                return this.UOMField;
            }
            set {
                if ((object.ReferenceEquals(this.UOMField, value) != true)) {
                    this.UOMField = value;
                    this.RaisePropertyChanged("UOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPC {
            get {
                return this.UPCField;
            }
            set {
                if ((object.ReferenceEquals(this.UPCField, value) != true)) {
                    this.UPCField = value;
                    this.RaisePropertyChanged("UPC");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProductService.IProductService")]
    public interface IProductService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetProduct", ReplyAction="http://tempuri.org/IProductService/GetProductResponse")]
        urShopper.Data.Loader.ProductService.Product GetProduct(int ProductId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetProduct", ReplyAction="http://tempuri.org/IProductService/GetProductResponse")]
        System.Threading.Tasks.Task<urShopper.Data.Loader.ProductService.Product> GetProductAsync(int ProductId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetMarketerProduct", ReplyAction="http://tempuri.org/IProductService/GetMarketerProductResponse")]
        urShopper.Data.Loader.ProductService.Product GetMarketerProduct(string MarketerName, string ProductName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetMarketerProduct", ReplyAction="http://tempuri.org/IProductService/GetMarketerProductResponse")]
        System.Threading.Tasks.Task<urShopper.Data.Loader.ProductService.Product> GetMarketerProductAsync(string MarketerName, string ProductName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetMarketerProductById", ReplyAction="http://tempuri.org/IProductService/GetMarketerProductByIdResponse")]
        urShopper.Data.Loader.ProductService.Product GetMarketerProductById(long MarketerProductId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetMarketerProductById", ReplyAction="http://tempuri.org/IProductService/GetMarketerProductByIdResponse")]
        System.Threading.Tasks.Task<urShopper.Data.Loader.ProductService.Product> GetMarketerProductByIdAsync(long MarketerProductId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetSupplierProduct", ReplyAction="http://tempuri.org/IProductService/GetSupplierProductResponse")]
        urShopper.Data.Loader.ProductService.Product GetSupplierProduct(string SupplierName, string ProductName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetSupplierProduct", ReplyAction="http://tempuri.org/IProductService/GetSupplierProductResponse")]
        System.Threading.Tasks.Task<urShopper.Data.Loader.ProductService.Product> GetSupplierProductAsync(string SupplierName, string ProductName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetSupplierProductById", ReplyAction="http://tempuri.org/IProductService/GetSupplierProductByIdResponse")]
        urShopper.Data.Loader.ProductService.Product GetSupplierProductById(long SupplierProductId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetSupplierProductById", ReplyAction="http://tempuri.org/IProductService/GetSupplierProductByIdResponse")]
        System.Threading.Tasks.Task<urShopper.Data.Loader.ProductService.Product> GetSupplierProductByIdAsync(long SupplierProductId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetProductId", ReplyAction="http://tempuri.org/IProductService/GetProductIdResponse")]
        long GetProductId(string ProductSKU);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetProductId", ReplyAction="http://tempuri.org/IProductService/GetProductIdResponse")]
        System.Threading.Tasks.Task<long> GetProductIdAsync(string ProductSKU);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetAllProducts", ReplyAction="http://tempuri.org/IProductService/GetAllProductsResponse")]
        urShopper.Data.Loader.ProductService.Product[] GetAllProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetAllProducts", ReplyAction="http://tempuri.org/IProductService/GetAllProductsResponse")]
        System.Threading.Tasks.Task<urShopper.Data.Loader.ProductService.Product[]> GetAllProductsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetAllProductsList", ReplyAction="http://tempuri.org/IProductService/GetAllProductsListResponse")]
        urShopper.Data.Loader.ProductService.Product[] GetAllProductsList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetAllProductsList", ReplyAction="http://tempuri.org/IProductService/GetAllProductsListResponse")]
        System.Threading.Tasks.Task<urShopper.Data.Loader.ProductService.Product[]> GetAllProductsListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/SaveProduct", ReplyAction="http://tempuri.org/IProductService/SaveProductResponse")]
        long SaveProduct(string PName, string PDescription, string PManufacturer, decimal Price, string PSKU, string PUPC, string PEAN, string PGTIN, string PUOM);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/SaveProduct", ReplyAction="http://tempuri.org/IProductService/SaveProductResponse")]
        System.Threading.Tasks.Task<long> SaveProductAsync(string PName, string PDescription, string PManufacturer, decimal Price, string PSKU, string PUPC, string PEAN, string PGTIN, string PUOM);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/DeleteProduct", ReplyAction="http://tempuri.org/IProductService/DeleteProductResponse")]
        void DeleteProduct(string ProductSKU);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/DeleteProduct", ReplyAction="http://tempuri.org/IProductService/DeleteProductResponse")]
        System.Threading.Tasks.Task DeleteProductAsync(string ProductSKU);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/DeleteProductById", ReplyAction="http://tempuri.org/IProductService/DeleteProductByIdResponse")]
        void DeleteProductById(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/DeleteProductById", ReplyAction="http://tempuri.org/IProductService/DeleteProductByIdResponse")]
        System.Threading.Tasks.Task DeleteProductByIdAsync(int Id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProductServiceChannel : urShopper.Data.Loader.ProductService.IProductService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProductServiceClient : System.ServiceModel.ClientBase<urShopper.Data.Loader.ProductService.IProductService>, urShopper.Data.Loader.ProductService.IProductService {
        
        public ProductServiceClient() {
        }
        
        public ProductServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProductServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public urShopper.Data.Loader.ProductService.Product GetProduct(int ProductId) {
            return base.Channel.GetProduct(ProductId);
        }
        
        public System.Threading.Tasks.Task<urShopper.Data.Loader.ProductService.Product> GetProductAsync(int ProductId) {
            return base.Channel.GetProductAsync(ProductId);
        }
        
        public urShopper.Data.Loader.ProductService.Product GetMarketerProduct(string MarketerName, string ProductName) {
            return base.Channel.GetMarketerProduct(MarketerName, ProductName);
        }
        
        public System.Threading.Tasks.Task<urShopper.Data.Loader.ProductService.Product> GetMarketerProductAsync(string MarketerName, string ProductName) {
            return base.Channel.GetMarketerProductAsync(MarketerName, ProductName);
        }
        
        public urShopper.Data.Loader.ProductService.Product GetMarketerProductById(long MarketerProductId) {
            return base.Channel.GetMarketerProductById(MarketerProductId);
        }
        
        public System.Threading.Tasks.Task<urShopper.Data.Loader.ProductService.Product> GetMarketerProductByIdAsync(long MarketerProductId) {
            return base.Channel.GetMarketerProductByIdAsync(MarketerProductId);
        }
        
        public urShopper.Data.Loader.ProductService.Product GetSupplierProduct(string SupplierName, string ProductName) {
            return base.Channel.GetSupplierProduct(SupplierName, ProductName);
        }
        
        public System.Threading.Tasks.Task<urShopper.Data.Loader.ProductService.Product> GetSupplierProductAsync(string SupplierName, string ProductName) {
            return base.Channel.GetSupplierProductAsync(SupplierName, ProductName);
        }
        
        public urShopper.Data.Loader.ProductService.Product GetSupplierProductById(long SupplierProductId) {
            return base.Channel.GetSupplierProductById(SupplierProductId);
        }
        
        public System.Threading.Tasks.Task<urShopper.Data.Loader.ProductService.Product> GetSupplierProductByIdAsync(long SupplierProductId) {
            return base.Channel.GetSupplierProductByIdAsync(SupplierProductId);
        }
        
        public long GetProductId(string ProductSKU) {
            return base.Channel.GetProductId(ProductSKU);
        }
        
        public System.Threading.Tasks.Task<long> GetProductIdAsync(string ProductSKU) {
            return base.Channel.GetProductIdAsync(ProductSKU);
        }
        
        public urShopper.Data.Loader.ProductService.Product[] GetAllProducts() {
            return base.Channel.GetAllProducts();
        }
        
        public System.Threading.Tasks.Task<urShopper.Data.Loader.ProductService.Product[]> GetAllProductsAsync() {
            return base.Channel.GetAllProductsAsync();
        }
        
        public urShopper.Data.Loader.ProductService.Product[] GetAllProductsList() {
            return base.Channel.GetAllProductsList();
        }
        
        public System.Threading.Tasks.Task<urShopper.Data.Loader.ProductService.Product[]> GetAllProductsListAsync() {
            return base.Channel.GetAllProductsListAsync();
        }
        
        public long SaveProduct(string PName, string PDescription, string PManufacturer, decimal Price, string PSKU, string PUPC, string PEAN, string PGTIN, string PUOM) {
            return base.Channel.SaveProduct(PName, PDescription, PManufacturer, Price, PSKU, PUPC, PEAN, PGTIN, PUOM);
        }
        
        public System.Threading.Tasks.Task<long> SaveProductAsync(string PName, string PDescription, string PManufacturer, decimal Price, string PSKU, string PUPC, string PEAN, string PGTIN, string PUOM) {
            return base.Channel.SaveProductAsync(PName, PDescription, PManufacturer, Price, PSKU, PUPC, PEAN, PGTIN, PUOM);
        }
        
        public void DeleteProduct(string ProductSKU) {
            base.Channel.DeleteProduct(ProductSKU);
        }
        
        public System.Threading.Tasks.Task DeleteProductAsync(string ProductSKU) {
            return base.Channel.DeleteProductAsync(ProductSKU);
        }
        
        public void DeleteProductById(int Id) {
            base.Channel.DeleteProductById(Id);
        }
        
        public System.Threading.Tasks.Task DeleteProductByIdAsync(int Id) {
            return base.Channel.DeleteProductByIdAsync(Id);
        }
    }
}
