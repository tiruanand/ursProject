//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace urShopper.Data.Loader.SupplierService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Supplier", Namespace="http://schemas.datacontract.org/2004/07/eFIN.MVP.Services.Store")]
    [System.SerializableAttribute()]
    public partial class Supplier : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DomainField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastUpdatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Domain {
            get {
                return this.DomainField;
            }
            set {
                if ((object.ReferenceEquals(this.DomainField, value) != true)) {
                    this.DomainField = value;
                    this.RaisePropertyChanged("Domain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastUpdatedOn {
            get {
                return this.LastUpdatedOnField;
            }
            set {
                if ((this.LastUpdatedOnField.Equals(value) != true)) {
                    this.LastUpdatedOnField = value;
                    this.RaisePropertyChanged("LastUpdatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SupplierProducts", Namespace="http://schemas.datacontract.org/2004/07/eFIN.MVP.Services.Store")]
    [System.SerializableAttribute()]
    public partial class SupplierProducts : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private urShopper.Data.Loader.SupplierService.RelatedProduct[] ProductsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private urShopper.Data.Loader.SupplierService.Supplier SupplierField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public urShopper.Data.Loader.SupplierService.RelatedProduct[] Products {
            get {
                return this.ProductsField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductsField, value) != true)) {
                    this.ProductsField = value;
                    this.RaisePropertyChanged("Products");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public urShopper.Data.Loader.SupplierService.Supplier Supplier {
            get {
                return this.SupplierField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplierField, value) != true)) {
                    this.SupplierField = value;
                    this.RaisePropertyChanged("Supplier");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RelatedProduct", Namespace="http://schemas.datacontract.org/2004/07/eFIN.MVP.Services.Store")]
    [System.SerializableAttribute()]
    public partial class RelatedProduct : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastUpdatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private urShopper.Data.Loader.SupplierService.Product ProductField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastUpdatedOn {
            get {
                return this.LastUpdatedOnField;
            }
            set {
                if ((this.LastUpdatedOnField.Equals(value) != true)) {
                    this.LastUpdatedOnField = value;
                    this.RaisePropertyChanged("LastUpdatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public urShopper.Data.Loader.SupplierService.Product Product {
            get {
                return this.ProductField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductField, value) != true)) {
                    this.ProductField = value;
                    this.RaisePropertyChanged("Product");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Product", Namespace="http://schemas.datacontract.org/2004/07/eFIN.MVP.Services.Store")]
    [System.SerializableAttribute()]
    public partial class Product : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EANField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GTINField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastUpdatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManufacturerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SKUField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UPCField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EAN {
            get {
                return this.EANField;
            }
            set {
                if ((object.ReferenceEquals(this.EANField, value) != true)) {
                    this.EANField = value;
                    this.RaisePropertyChanged("EAN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GTIN {
            get {
                return this.GTINField;
            }
            set {
                if ((object.ReferenceEquals(this.GTINField, value) != true)) {
                    this.GTINField = value;
                    this.RaisePropertyChanged("GTIN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastUpdatedOn {
            get {
                return this.LastUpdatedOnField;
            }
            set {
                if ((this.LastUpdatedOnField.Equals(value) != true)) {
                    this.LastUpdatedOnField = value;
                    this.RaisePropertyChanged("LastUpdatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Manufacturer {
            get {
                return this.ManufacturerField;
            }
            set {
                if ((object.ReferenceEquals(this.ManufacturerField, value) != true)) {
                    this.ManufacturerField = value;
                    this.RaisePropertyChanged("Manufacturer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SKU {
            get {
                return this.SKUField;
            }
            set {
                if ((object.ReferenceEquals(this.SKUField, value) != true)) {
                    this.SKUField = value;
                    this.RaisePropertyChanged("SKU");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UOM {
            get {
                return this.UOMField;
            }
            set {
                if ((object.ReferenceEquals(this.UOMField, value) != true)) {
                    this.UOMField = value;
                    this.RaisePropertyChanged("UOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPC {
            get {
                return this.UPCField;
            }
            set {
                if ((object.ReferenceEquals(this.UPCField, value) != true)) {
                    this.UPCField = value;
                    this.RaisePropertyChanged("UPC");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductSuppliers", Namespace="http://schemas.datacontract.org/2004/07/eFIN.MVP.Services.Store")]
    [System.SerializableAttribute()]
    public partial class ProductSuppliers : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private urShopper.Data.Loader.SupplierService.Product ProductField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private urShopper.Data.Loader.SupplierService.RelatedSupplier[] SuppliersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public urShopper.Data.Loader.SupplierService.Product Product {
            get {
                return this.ProductField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductField, value) != true)) {
                    this.ProductField = value;
                    this.RaisePropertyChanged("Product");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public urShopper.Data.Loader.SupplierService.RelatedSupplier[] Suppliers {
            get {
                return this.SuppliersField;
            }
            set {
                if ((object.ReferenceEquals(this.SuppliersField, value) != true)) {
                    this.SuppliersField = value;
                    this.RaisePropertyChanged("Suppliers");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RelatedSupplier", Namespace="http://schemas.datacontract.org/2004/07/eFIN.MVP.Services.Store")]
    [System.SerializableAttribute()]
    public partial class RelatedSupplier : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastUpdatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private urShopper.Data.Loader.SupplierService.Supplier SupplierField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastUpdatedOn {
            get {
                return this.LastUpdatedOnField;
            }
            set {
                if ((this.LastUpdatedOnField.Equals(value) != true)) {
                    this.LastUpdatedOnField = value;
                    this.RaisePropertyChanged("LastUpdatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public urShopper.Data.Loader.SupplierService.Supplier Supplier {
            get {
                return this.SupplierField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplierField, value) != true)) {
                    this.SupplierField = value;
                    this.RaisePropertyChanged("Supplier");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Offer", Namespace="http://schemas.datacontract.org/2004/07/eFIN.MVP.Services.Store")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(urShopper.Data.Loader.SupplierService.SupplierOffer))]
    public partial class Offer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCurrentOfferField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastUpdatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MarketerProductIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MaxPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime OfferDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long OfferIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private urShopper.Data.Loader.SupplierService.Product OfferedProductField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ProductIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long StatusIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCurrentOffer {
            get {
                return this.IsCurrentOfferField;
            }
            set {
                if ((this.IsCurrentOfferField.Equals(value) != true)) {
                    this.IsCurrentOfferField = value;
                    this.RaisePropertyChanged("IsCurrentOffer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastUpdatedOn {
            get {
                return this.LastUpdatedOnField;
            }
            set {
                if ((this.LastUpdatedOnField.Equals(value) != true)) {
                    this.LastUpdatedOnField = value;
                    this.RaisePropertyChanged("LastUpdatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MarketerProductId {
            get {
                return this.MarketerProductIdField;
            }
            set {
                if ((this.MarketerProductIdField.Equals(value) != true)) {
                    this.MarketerProductIdField = value;
                    this.RaisePropertyChanged("MarketerProductId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MaxPrice {
            get {
                return this.MaxPriceField;
            }
            set {
                if ((this.MaxPriceField.Equals(value) != true)) {
                    this.MaxPriceField = value;
                    this.RaisePropertyChanged("MaxPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime OfferDate {
            get {
                return this.OfferDateField;
            }
            set {
                if ((this.OfferDateField.Equals(value) != true)) {
                    this.OfferDateField = value;
                    this.RaisePropertyChanged("OfferDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long OfferId {
            get {
                return this.OfferIdField;
            }
            set {
                if ((this.OfferIdField.Equals(value) != true)) {
                    this.OfferIdField = value;
                    this.RaisePropertyChanged("OfferId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public urShopper.Data.Loader.SupplierService.Product OfferedProduct {
            get {
                return this.OfferedProductField;
            }
            set {
                if ((object.ReferenceEquals(this.OfferedProductField, value) != true)) {
                    this.OfferedProductField = value;
                    this.RaisePropertyChanged("OfferedProduct");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((this.ProductIdField.Equals(value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long StatusId {
            get {
                return this.StatusIdField;
            }
            set {
                if ((this.StatusIdField.Equals(value) != true)) {
                    this.StatusIdField = value;
                    this.RaisePropertyChanged("StatusId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SupplierOffer", Namespace="http://schemas.datacontract.org/2004/07/eFIN.MVP.Services.Store")]
    [System.SerializableAttribute()]
    public partial class SupplierOffer : urShopper.Data.Loader.SupplierService.Offer {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private urShopper.Data.Loader.SupplierService.Supplier OfferedSupplierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private urShopper.Data.Loader.SupplierService.Offer[] OffersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SupplierIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public urShopper.Data.Loader.SupplierService.Supplier OfferedSupplier {
            get {
                return this.OfferedSupplierField;
            }
            set {
                if ((object.ReferenceEquals(this.OfferedSupplierField, value) != true)) {
                    this.OfferedSupplierField = value;
                    this.RaisePropertyChanged("OfferedSupplier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public urShopper.Data.Loader.SupplierService.Offer[] Offers {
            get {
                return this.OffersField;
            }
            set {
                if ((object.ReferenceEquals(this.OffersField, value) != true)) {
                    this.OffersField = value;
                    this.RaisePropertyChanged("Offers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SupplierId {
            get {
                return this.SupplierIdField;
            }
            set {
                if ((this.SupplierIdField.Equals(value) != true)) {
                    this.SupplierIdField = value;
                    this.RaisePropertyChanged("SupplierId");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SupplierService.ISupplierService")]
    public interface ISupplierService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetSupplier", ReplyAction="http://tempuri.org/ISupplierService/GetSupplierResponse")]
        urShopper.Data.Loader.SupplierService.Supplier GetSupplier(int SupplierId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetSupplier", ReplyAction="http://tempuri.org/ISupplierService/GetSupplierResponse")]
        System.Threading.Tasks.Task<urShopper.Data.Loader.SupplierService.Supplier> GetSupplierAsync(int SupplierId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetSupplierId", ReplyAction="http://tempuri.org/ISupplierService/GetSupplierIdResponse")]
        long GetSupplierId(string SupplierName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetSupplierId", ReplyAction="http://tempuri.org/ISupplierService/GetSupplierIdResponse")]
        System.Threading.Tasks.Task<long> GetSupplierIdAsync(string SupplierName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetAllSuppliers", ReplyAction="http://tempuri.org/ISupplierService/GetAllSuppliersResponse")]
        urShopper.Data.Loader.SupplierService.Supplier[] GetAllSuppliers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetAllSuppliers", ReplyAction="http://tempuri.org/ISupplierService/GetAllSuppliersResponse")]
        System.Threading.Tasks.Task<urShopper.Data.Loader.SupplierService.Supplier[]> GetAllSuppliersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetAllSuppliersList", ReplyAction="http://tempuri.org/ISupplierService/GetAllSuppliersListResponse")]
        urShopper.Data.Loader.SupplierService.Supplier[] GetAllSuppliersList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetAllSuppliersList", ReplyAction="http://tempuri.org/ISupplierService/GetAllSuppliersListResponse")]
        System.Threading.Tasks.Task<urShopper.Data.Loader.SupplierService.Supplier[]> GetAllSuppliersListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/SaveSupplier", ReplyAction="http://tempuri.org/ISupplierService/SaveSupplierResponse")]
        long SaveSupplier(string SupplierName, string SupplierDomain, string SupplierType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/SaveSupplier", ReplyAction="http://tempuri.org/ISupplierService/SaveSupplierResponse")]
        System.Threading.Tasks.Task<long> SaveSupplierAsync(string SupplierName, string SupplierDomain, string SupplierType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/DeleteSupplier", ReplyAction="http://tempuri.org/ISupplierService/DeleteSupplierResponse")]
        void DeleteSupplier(string SupplierName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/DeleteSupplier", ReplyAction="http://tempuri.org/ISupplierService/DeleteSupplierResponse")]
        System.Threading.Tasks.Task DeleteSupplierAsync(string SupplierName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/DeleteSupplierById", ReplyAction="http://tempuri.org/ISupplierService/DeleteSupplierByIdResponse")]
        void DeleteSupplierById(int SupplierId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/DeleteSupplierById", ReplyAction="http://tempuri.org/ISupplierService/DeleteSupplierByIdResponse")]
        System.Threading.Tasks.Task DeleteSupplierByIdAsync(int SupplierId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/SaveSupplierProduct", ReplyAction="http://tempuri.org/ISupplierService/SaveSupplierProductResponse")]
        void SaveSupplierProduct(string SupplierName, string ProductName, string ProductDescription, string ProductManufacturer, decimal ProductPrice, string ProductSKU, string ProductUPC, string ProductEAN, string ProductGTIN, string ProductUOM);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/SaveSupplierProduct", ReplyAction="http://tempuri.org/ISupplierService/SaveSupplierProductResponse")]
        System.Threading.Tasks.Task SaveSupplierProductAsync(string SupplierName, string ProductName, string ProductDescription, string ProductManufacturer, decimal ProductPrice, string ProductSKU, string ProductUPC, string ProductEAN, string ProductGTIN, string ProductUOM);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/AddProductToSupplier", ReplyAction="http://tempuri.org/ISupplierService/AddProductToSupplierResponse")]
        void AddProductToSupplier(string SupplierName, string ProductName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/AddProductToSupplier", ReplyAction="http://tempuri.org/ISupplierService/AddProductToSupplierResponse")]
        System.Threading.Tasks.Task AddProductToSupplierAsync(string SupplierName, string ProductName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/RemoveProductFromSupplier", ReplyAction="http://tempuri.org/ISupplierService/RemoveProductFromSupplierResponse")]
        bool RemoveProductFromSupplier(string SupplierName, string ProductName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/RemoveProductFromSupplier", ReplyAction="http://tempuri.org/ISupplierService/RemoveProductFromSupplierResponse")]
        System.Threading.Tasks.Task<bool> RemoveProductFromSupplierAsync(string SupplierName, string ProductName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetSupplierProduct", ReplyAction="http://tempuri.org/ISupplierService/GetSupplierProductResponse")]
        urShopper.Data.Loader.SupplierService.SupplierProducts GetSupplierProduct(string SupplierName, string ProductName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetSupplierProduct", ReplyAction="http://tempuri.org/ISupplierService/GetSupplierProductResponse")]
        System.Threading.Tasks.Task<urShopper.Data.Loader.SupplierService.SupplierProducts> GetSupplierProductAsync(string SupplierName, string ProductName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetSupplierProductId", ReplyAction="http://tempuri.org/ISupplierService/GetSupplierProductIdResponse")]
        long GetSupplierProductId(long SupplierId, long ProductId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetSupplierProductId", ReplyAction="http://tempuri.org/ISupplierService/GetSupplierProductIdResponse")]
        System.Threading.Tasks.Task<long> GetSupplierProductIdAsync(long SupplierId, long ProductId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetSupplierProducts", ReplyAction="http://tempuri.org/ISupplierService/GetSupplierProductsResponse")]
        urShopper.Data.Loader.SupplierService.SupplierProducts GetSupplierProducts(string SupplierName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetSupplierProducts", ReplyAction="http://tempuri.org/ISupplierService/GetSupplierProductsResponse")]
        System.Threading.Tasks.Task<urShopper.Data.Loader.SupplierService.SupplierProducts> GetSupplierProductsAsync(string SupplierName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetProductSuppliers", ReplyAction="http://tempuri.org/ISupplierService/GetProductSuppliersResponse")]
        urShopper.Data.Loader.SupplierService.ProductSuppliers GetProductSuppliers(string ProductName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetProductSuppliers", ReplyAction="http://tempuri.org/ISupplierService/GetProductSuppliersResponse")]
        System.Threading.Tasks.Task<urShopper.Data.Loader.SupplierService.ProductSuppliers> GetProductSuppliersAsync(string ProductName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/SaveSupplierOffer", ReplyAction="http://tempuri.org/ISupplierService/SaveSupplierOfferResponse")]
        long SaveSupplierOffer(string SupplierName, string ProductSKU, decimal PriceOffered, System.DateTime OfferValidUpto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/SaveSupplierOffer", ReplyAction="http://tempuri.org/ISupplierService/SaveSupplierOfferResponse")]
        System.Threading.Tasks.Task<long> SaveSupplierOfferAsync(string SupplierName, string ProductSKU, decimal PriceOffered, System.DateTime OfferValidUpto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/RemoveSupplierOffer", ReplyAction="http://tempuri.org/ISupplierService/RemoveSupplierOfferResponse")]
        bool RemoveSupplierOffer(string SupplierName, string ProductSKU, decimal PriceOffered, System.DateTime OfferValidUpto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/RemoveSupplierOffer", ReplyAction="http://tempuri.org/ISupplierService/RemoveSupplierOfferResponse")]
        System.Threading.Tasks.Task<bool> RemoveSupplierOfferAsync(string SupplierName, string ProductSKU, decimal PriceOffered, System.DateTime OfferValidUpto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetSupplierOffer", ReplyAction="http://tempuri.org/ISupplierService/GetSupplierOfferResponse")]
        urShopper.Data.Loader.SupplierService.SupplierOffer GetSupplierOffer(string SupplierName, string ProductSKU, decimal PriceOffered, System.DateTime OfferValidUpto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetSupplierOffer", ReplyAction="http://tempuri.org/ISupplierService/GetSupplierOfferResponse")]
        System.Threading.Tasks.Task<urShopper.Data.Loader.SupplierService.SupplierOffer> GetSupplierOfferAsync(string SupplierName, string ProductSKU, decimal PriceOffered, System.DateTime OfferValidUpto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetSupplierOffers", ReplyAction="http://tempuri.org/ISupplierService/GetSupplierOffersResponse")]
        urShopper.Data.Loader.SupplierService.SupplierOffer[] GetSupplierOffers(string SupplierName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetSupplierOffers", ReplyAction="http://tempuri.org/ISupplierService/GetSupplierOffersResponse")]
        System.Threading.Tasks.Task<urShopper.Data.Loader.SupplierService.SupplierOffer[]> GetSupplierOffersAsync(string SupplierName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISupplierServiceChannel : urShopper.Data.Loader.SupplierService.ISupplierService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SupplierServiceClient : System.ServiceModel.ClientBase<urShopper.Data.Loader.SupplierService.ISupplierService>, urShopper.Data.Loader.SupplierService.ISupplierService {
        
        public SupplierServiceClient() {
        }
        
        public SupplierServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SupplierServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SupplierServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SupplierServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public urShopper.Data.Loader.SupplierService.Supplier GetSupplier(int SupplierId) {
            return base.Channel.GetSupplier(SupplierId);
        }
        
        public System.Threading.Tasks.Task<urShopper.Data.Loader.SupplierService.Supplier> GetSupplierAsync(int SupplierId) {
            return base.Channel.GetSupplierAsync(SupplierId);
        }
        
        public long GetSupplierId(string SupplierName) {
            return base.Channel.GetSupplierId(SupplierName);
        }
        
        public System.Threading.Tasks.Task<long> GetSupplierIdAsync(string SupplierName) {
            return base.Channel.GetSupplierIdAsync(SupplierName);
        }
        
        public urShopper.Data.Loader.SupplierService.Supplier[] GetAllSuppliers() {
            return base.Channel.GetAllSuppliers();
        }
        
        public System.Threading.Tasks.Task<urShopper.Data.Loader.SupplierService.Supplier[]> GetAllSuppliersAsync() {
            return base.Channel.GetAllSuppliersAsync();
        }
        
        public urShopper.Data.Loader.SupplierService.Supplier[] GetAllSuppliersList() {
            return base.Channel.GetAllSuppliersList();
        }
        
        public System.Threading.Tasks.Task<urShopper.Data.Loader.SupplierService.Supplier[]> GetAllSuppliersListAsync() {
            return base.Channel.GetAllSuppliersListAsync();
        }
        
        public long SaveSupplier(string SupplierName, string SupplierDomain, string SupplierType) {
            return base.Channel.SaveSupplier(SupplierName, SupplierDomain, SupplierType);
        }
        
        public System.Threading.Tasks.Task<long> SaveSupplierAsync(string SupplierName, string SupplierDomain, string SupplierType) {
            return base.Channel.SaveSupplierAsync(SupplierName, SupplierDomain, SupplierType);
        }
        
        public void DeleteSupplier(string SupplierName) {
            base.Channel.DeleteSupplier(SupplierName);
        }
        
        public System.Threading.Tasks.Task DeleteSupplierAsync(string SupplierName) {
            return base.Channel.DeleteSupplierAsync(SupplierName);
        }
        
        public void DeleteSupplierById(int SupplierId) {
            base.Channel.DeleteSupplierById(SupplierId);
        }
        
        public System.Threading.Tasks.Task DeleteSupplierByIdAsync(int SupplierId) {
            return base.Channel.DeleteSupplierByIdAsync(SupplierId);
        }
        
        public void SaveSupplierProduct(string SupplierName, string ProductName, string ProductDescription, string ProductManufacturer, decimal ProductPrice, string ProductSKU, string ProductUPC, string ProductEAN, string ProductGTIN, string ProductUOM) {
            base.Channel.SaveSupplierProduct(SupplierName, ProductName, ProductDescription, ProductManufacturer, ProductPrice, ProductSKU, ProductUPC, ProductEAN, ProductGTIN, ProductUOM);
        }
        
        public System.Threading.Tasks.Task SaveSupplierProductAsync(string SupplierName, string ProductName, string ProductDescription, string ProductManufacturer, decimal ProductPrice, string ProductSKU, string ProductUPC, string ProductEAN, string ProductGTIN, string ProductUOM) {
            return base.Channel.SaveSupplierProductAsync(SupplierName, ProductName, ProductDescription, ProductManufacturer, ProductPrice, ProductSKU, ProductUPC, ProductEAN, ProductGTIN, ProductUOM);
        }
        
        public void AddProductToSupplier(string SupplierName, string ProductName) {
            base.Channel.AddProductToSupplier(SupplierName, ProductName);
        }
        
        public System.Threading.Tasks.Task AddProductToSupplierAsync(string SupplierName, string ProductName) {
            return base.Channel.AddProductToSupplierAsync(SupplierName, ProductName);
        }
        
        public bool RemoveProductFromSupplier(string SupplierName, string ProductName) {
            return base.Channel.RemoveProductFromSupplier(SupplierName, ProductName);
        }
        
        public System.Threading.Tasks.Task<bool> RemoveProductFromSupplierAsync(string SupplierName, string ProductName) {
            return base.Channel.RemoveProductFromSupplierAsync(SupplierName, ProductName);
        }
        
        public urShopper.Data.Loader.SupplierService.SupplierProducts GetSupplierProduct(string SupplierName, string ProductName) {
            return base.Channel.GetSupplierProduct(SupplierName, ProductName);
        }
        
        public System.Threading.Tasks.Task<urShopper.Data.Loader.SupplierService.SupplierProducts> GetSupplierProductAsync(string SupplierName, string ProductName) {
            return base.Channel.GetSupplierProductAsync(SupplierName, ProductName);
        }
        
        public long GetSupplierProductId(long SupplierId, long ProductId) {
            return base.Channel.GetSupplierProductId(SupplierId, ProductId);
        }
        
        public System.Threading.Tasks.Task<long> GetSupplierProductIdAsync(long SupplierId, long ProductId) {
            return base.Channel.GetSupplierProductIdAsync(SupplierId, ProductId);
        }
        
        public urShopper.Data.Loader.SupplierService.SupplierProducts GetSupplierProducts(string SupplierName) {
            return base.Channel.GetSupplierProducts(SupplierName);
        }
        
        public System.Threading.Tasks.Task<urShopper.Data.Loader.SupplierService.SupplierProducts> GetSupplierProductsAsync(string SupplierName) {
            return base.Channel.GetSupplierProductsAsync(SupplierName);
        }
        
        public urShopper.Data.Loader.SupplierService.ProductSuppliers GetProductSuppliers(string ProductName) {
            return base.Channel.GetProductSuppliers(ProductName);
        }
        
        public System.Threading.Tasks.Task<urShopper.Data.Loader.SupplierService.ProductSuppliers> GetProductSuppliersAsync(string ProductName) {
            return base.Channel.GetProductSuppliersAsync(ProductName);
        }
        
        public long SaveSupplierOffer(string SupplierName, string ProductSKU, decimal PriceOffered, System.DateTime OfferValidUpto) {
            return base.Channel.SaveSupplierOffer(SupplierName, ProductSKU, PriceOffered, OfferValidUpto);
        }
        
        public System.Threading.Tasks.Task<long> SaveSupplierOfferAsync(string SupplierName, string ProductSKU, decimal PriceOffered, System.DateTime OfferValidUpto) {
            return base.Channel.SaveSupplierOfferAsync(SupplierName, ProductSKU, PriceOffered, OfferValidUpto);
        }
        
        public bool RemoveSupplierOffer(string SupplierName, string ProductSKU, decimal PriceOffered, System.DateTime OfferValidUpto) {
            return base.Channel.RemoveSupplierOffer(SupplierName, ProductSKU, PriceOffered, OfferValidUpto);
        }
        
        public System.Threading.Tasks.Task<bool> RemoveSupplierOfferAsync(string SupplierName, string ProductSKU, decimal PriceOffered, System.DateTime OfferValidUpto) {
            return base.Channel.RemoveSupplierOfferAsync(SupplierName, ProductSKU, PriceOffered, OfferValidUpto);
        }
        
        public urShopper.Data.Loader.SupplierService.SupplierOffer GetSupplierOffer(string SupplierName, string ProductSKU, decimal PriceOffered, System.DateTime OfferValidUpto) {
            return base.Channel.GetSupplierOffer(SupplierName, ProductSKU, PriceOffered, OfferValidUpto);
        }
        
        public System.Threading.Tasks.Task<urShopper.Data.Loader.SupplierService.SupplierOffer> GetSupplierOfferAsync(string SupplierName, string ProductSKU, decimal PriceOffered, System.DateTime OfferValidUpto) {
            return base.Channel.GetSupplierOfferAsync(SupplierName, ProductSKU, PriceOffered, OfferValidUpto);
        }
        
        public urShopper.Data.Loader.SupplierService.SupplierOffer[] GetSupplierOffers(string SupplierName) {
            return base.Channel.GetSupplierOffers(SupplierName);
        }
        
        public System.Threading.Tasks.Task<urShopper.Data.Loader.SupplierService.SupplierOffer[]> GetSupplierOffersAsync(string SupplierName) {
            return base.Channel.GetSupplierOffersAsync(SupplierName);
        }
    }
}
